declare enum TOKEN_TYPE {
    SELECTOR = 1,
    BODY_START = 2,
    BODY_END = 3
}
declare type TOKEN_SELECTOR = {
    type: TOKEN_TYPE.SELECTOR;
    index: number;
    indexEnd: number;
    selector: string;
};
declare type TOKEN_BODY_START = {
    type: TOKEN_TYPE.BODY_START;
    index: number;
};
declare type TOKEN_BODY_END = {
    type: TOKEN_TYPE.BODY_END;
    index: number;
};
declare type TOKEN = TOKEN_SELECTOR | TOKEN_BODY_START | TOKEN_BODY_END;
declare type AST = ROOT_NODE;
declare type ROOT_NODE = {
    parent: null;
    children: NODE[];
};
declare type NODE = {
    parent: ROOT_NODE | NODE;
    index: number;
    indexEnd: number;
    selector: string;
    selectorIndex: number;
    selectorIndexEnd: number;
    body: string;
    bodyIndex: number;
    bodyIndexEnd: number;
    children: NODE[];
};
export { TOKEN_TYPE, TOKEN_SELECTOR, TOKEN_BODY_START, TOKEN_BODY_END, TOKEN, AST, ROOT_NODE, NODE };
